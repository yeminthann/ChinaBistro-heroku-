{"ast":null,"code":"import * as ActionTypes from './ActionTypes'; //lunch reducer function\n\nexport const Soups = (state = {\n  isLoading: true,\n  soups: [],\n  errMsg: null\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.SOUP_LOADING:\n      return { ...state,\n        isLoading: true,\n        lunchs: [],\n        errMsg: null\n      };\n\n    case ActionTypes.ADD_SOUP:\n      return { ...state,\n        isLoading: false,\n        lunchs: action.payload,\n        errMsg: null\n      };\n\n    case ActionTypes.SOUP_FAILED:\n      return { ...state,\n        isLoading: false,\n        lunchs: [],\n        errMsg: action.payload\n      };\n\n    default:\n      return state;\n  }\n}; // ====> to configureStore\n\n_c = Soups;\n\nvar _c;\n\n$RefreshReg$(_c, \"Soups\");","map":{"version":3,"sources":["C:/Users/User/Desktop/coursera/projects/React/chinabistro/src/redux/soup.js"],"names":["ActionTypes","Soups","state","isLoading","soups","errMsg","action","type","SOUP_LOADING","lunchs","ADD_SOUP","payload","SOUP_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B,C,CAEA;;AACA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAG;AAC1BC,EAAAA,SAAS,EAAG,IADc;AAE1BC,EAAAA,KAAK,EAAE,EAFmB;AAG1BC,EAAAA,MAAM,EAAE;AAHkB,CAAT,EAIlBC,MAJkB,KAIP;AACV,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,WAAW,CAACQ,YAAjB;AACI,aAAO,EACH,GAAGN,KADA;AAEHC,QAAAA,SAAS,EAAE,IAFR;AAGHM,QAAAA,MAAM,EAAE,EAHL;AAIHJ,QAAAA,MAAM,EAAE;AAJL,OAAP;;AAMJ,SAAKL,WAAW,CAACU,QAAjB;AACI,aAAO,EACH,GAAGR,KADA;AAEHC,QAAAA,SAAS,EAAE,KAFR;AAGHM,QAAAA,MAAM,EAAEH,MAAM,CAACK,OAHZ;AAIHN,QAAAA,MAAM,EAAE;AAJL,OAAP;;AAMJ,SAAKL,WAAW,CAACY,WAAjB;AACI,aAAO,EACH,GAAGV,KADA;AAEHC,QAAAA,SAAS,EAAE,KAFR;AAGHM,QAAAA,MAAM,EAAE,EAHL;AAIHJ,QAAAA,MAAM,EAAEC,MAAM,CAACK;AAJZ,OAAP;;AAMJ;AACI,aAAOT,KAAP;AAvBR;AAyBH,CA9BM,C,CAgCP;;KAhCaD,K","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\n\r\n//lunch reducer function\r\nexport const Soups = (state = {\r\n    isLoading : true,\r\n    soups: [],\r\n    errMsg: null\r\n}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.SOUP_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                lunchs: [],\r\n                errMsg: null\r\n            }\r\n        case ActionTypes.ADD_SOUP:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                lunchs: action.payload,\r\n                errMsg: null\r\n            }\r\n        case ActionTypes.SOUP_FAILED:\r\n            return {\r\n                ...state, \r\n                isLoading: false,\r\n                lunchs: [],\r\n                errMsg: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n        }\r\n};\r\n\r\n// ====> to configureStore"]},"metadata":{},"sourceType":"module"}