{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Menus } from './menu';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { Comments } from './comments';\nimport { initialFeedback } from './forms';\nimport { createForms } from 'react-redux-form'; //create store\n\nexport const configureStore = () => {\n  const store = createStore(combineReducers({\n    menus: Menus,\n    comments: Comments,\n    ...createForms({\n      feedback: initialFeedback\n    })\n  }), applyMiddleware(thunk, logger));\n  return store;\n};\n/* to App.js ==> */","map":{"version":3,"sources":["C:/Users/User/Desktop/coursera/projects/React/chinabistro/src/redux/configureStore.js"],"names":["createStore","combineReducers","applyMiddleware","Menus","thunk","logger","Comments","initialFeedback","createForms","configureStore","store","menus","comments","feedback"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,eAAT,QAAgC,SAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CAEA;;AACA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChC,QAAMC,KAAK,GAAGV,WAAW,CACrBC,eAAe,CAAC;AACZU,IAAAA,KAAK,EAAER,KADK;AAEZS,IAAAA,QAAQ,EAAEN,QAFE;AAGZ,OAAGE,WAAW,CAAE;AACZK,MAAAA,QAAQ,EAAEN;AADE,KAAF;AAHF,GAAD,CADM,EAQrBL,eAAe,CAACE,KAAD,EAAQC,MAAR,CARM,CAAzB;AAUA,SAAOK,KAAP;AACH,CAZM;AAcP","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Menus } from './menu';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { Comments } from './comments';\r\nimport { initialFeedback } from './forms';\r\nimport { createForms } from 'react-redux-form';\r\n\r\n//create store\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            menus: Menus,\r\n            comments: Comments,\r\n            ...createForms ({\r\n                feedback: initialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n    return store;\r\n}\r\n\r\n/* to App.js ==> */"]},"metadata":{},"sourceType":"module"}